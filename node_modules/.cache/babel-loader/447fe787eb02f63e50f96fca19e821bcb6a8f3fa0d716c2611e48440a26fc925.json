{"ast":null,"code":"'use client';\n\nvar _jsxFileName = \"/home/sysadmin/Desktop/projects/joyful-frontend/react-joyful/joyful-app/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create URLSearchParams object for form data\n    const formDataToSend = new URLSearchParams();\n    formDataToSend.append('username', formData.username);\n    formDataToSend.append('password', formData.password);\n    formDataToSend.append('login-form-submit', 'login');\n    try {\n      const response = await fetch('/app/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formDataToSend,\n        redirect: 'follow',\n        // This ensures fetch follows redirects\n        credentials: 'include' // This ensures cookies are sent with the request\n      });\n\n      // If the response was redirected, the browser will have followed it automatically\n      // The response.url will be the final URL after all redirects\n      if (response.ok) {\n        window.location.href = response.url;\n      } else {\n        console.error('Login failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"wkQpvp+UwpnGbspM4mw1yNK7vmo=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","jsxDEV","_jsxDEV","LoginForm","formData","setFormData","username","password","handleChange","e","name","value","target","handleSubmit","preventDefault","formDataToSend","URLSearchParams","append","response","fetch","method","headers","body","redirect","credentials","ok","window","location","href","url","console","error","statusText","className","children","Header","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sysadmin/Desktop/projects/joyful-frontend/react-joyful/joyful-app/src/components/LoginForm.js"],"sourcesContent":["\n'use client'\nimport React, { useState } from 'react';\n \nconst LoginForm = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Create URLSearchParams object for form data\n    const formDataToSend = new URLSearchParams();\n    formDataToSend.append('username', formData.username);\n    formDataToSend.append('password', formData.password);\n    formDataToSend.append('login-form-submit', 'login');\n \n    try {\n      const response = await fetch('/app/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formDataToSend,\n        redirect: 'follow', // This ensures fetch follows redirects\n        credentials: 'include' // This ensures cookies are sent with the request\n      });\n \n      // If the response was redirected, the browser will have followed it automatically\n      // The response.url will be the final URL after all redirects\n      if (response.ok) {\n        window.location.href = response.url;\n      } else {\n        console.error('Login failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n \n  return (\n    <div className=\"login-container\">\n      <Header></Header>\n    </div>\n  );\n};\n \nexport default LoginForm;"],"mappings":"AACA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AACZ,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAN,EAAA;EACtB,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC;IACvCM,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,cAAc,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC5CD,cAAc,CAACE,MAAM,CAAC,UAAU,EAAEb,QAAQ,CAACE,QAAQ,CAAC;IACpDS,cAAc,CAACE,MAAM,CAAC,UAAU,EAAEb,QAAQ,CAACG,QAAQ,CAAC;IACpDQ,cAAc,CAACE,MAAM,CAAC,mBAAmB,EAAE,OAAO,CAAC;IAEnD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEP,cAAc;QACpBQ,QAAQ,EAAE,QAAQ;QAAE;QACpBC,WAAW,EAAE,SAAS,CAAC;MACzB,CAAC,CAAC;;MAEF;MACA;MACA,IAAIN,QAAQ,CAACO,EAAE,EAAE;QACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGV,QAAQ,CAACW,GAAG;MACrC,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEb,QAAQ,CAACc,UAAU,CAAC;MACrD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,oBACE7B,OAAA;IAAK+B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BhC,OAAA,CAACiC,MAAM;MAAAC,QAAA,EAAAxC,YAAA;MAAAyC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAF,QAAA,EAAAxC,YAAA;IAAAyC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACzC,EAAA,CAhDIM,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAkDf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}